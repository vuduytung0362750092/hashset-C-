#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class hashset {
public :
	vector<vector<int>> myBucket; 
	hashset() {
		myBucket.resize(1000); 
	}
	int hashfunction(int key) {
		return key % 1000; 
	}
	void add(int key) {
		vector<int>::iterator it; 
		int hashValueIndex = hashfunction(key); 
		vector<int>bucket = myBucket[hashValueIndex]; 
		it = find(bucket.begin(), bucket.end(), hashValueIndex); 
		if (it != bucket.end()) {
			bucket.push_back(key); 
		}
	}
	void remove() {

	}
	bool contain(int key) {

	}
};

int main() {
	hashset* t = new hashset; 
	t->add(1); 
	t->add(1); 
	t->add(2); 
}

